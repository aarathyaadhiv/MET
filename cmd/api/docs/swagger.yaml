definitions:
  models.Admin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.OtpRequest:
    properties:
      ph_no:
        type: string
    required:
    - ph_no
    type: object
  models.OtpVerify:
    properties:
      code:
        type: string
      ph_no:
        type: string
    required:
    - code
    - ph_no
    type: object
  models.Preference:
    properties:
      gender:
        type: integer
      max_age:
        type: integer
      max_distance:
        type: integer
      min_age:
        type: integer
    required:
    - gender
    - max_age
    - max_distance
    - min_age
    type: object
  models.Report:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  models.Subscription:
    properties:
      amount:
        type: number
      days:
        type: integer
      like:
        type: integer
      name:
        type: string
      see_like:
        type: boolean
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      statusCode:
        type: integer
    type: object
info:
  contact: {}
paths:
  /admin/login:
    post:
      consumes:
      - application/json
      description: Log in as an admin with provided credentials
      parameters:
      - description: Admin login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Admin'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Provided data is not in required format
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Log in as an admin
      tags:
      - Admin Authentication
  /admin/reported-users:
    get:
      consumes:
      - application/json
      description: Get a list of reported users
      operationId: get-reported-users
      produces:
      - application/json
      responses:
        "200":
          description: successfully showing reported users
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get reported users
      tags:
      - Report Management
  /admin/reported-users/{reportId}:
    get:
      description: Get details of a reported user by ID
      operationId: get-reported-user
      parameters:
      - description: Report ID
        in: path
        name: reportId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: successfully showing the reported user
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: string conversion failed
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get reported user by ID
      tags:
      - Report Management
  /admin/signUp:
    post:
      consumes:
      - application/json
      description: Create a new admin with provided details
      parameters:
      - description: Admin details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Admin'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created admin
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Data given is not in required format
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new admin
      tags:
      - Admin Authentication
  /admin/subscription:
    get:
      consumes:
      - application/json
      description: Get a list of all subscriptions in the system
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all subscriptions
      tags:
      - Subscription Management
    post:
      consumes:
      - application/json
      description: Add a new subscription to the system
      parameters:
      - description: Subscription object in JSON format
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.Subscription'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a new subscription
      tags:
      - Subscription Management
  /admin/subscription/{subscriptionId}:
    get:
      consumes:
      - application/json
      description: Get details of a subscription by its ID
      parameters:
      - description: Subscription ID
        format: int64
        in: path
        minimum: 1
        name: subscriptionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get a subscription by ID
      tags:
      - Subscription Management
    patch:
      consumes:
      - application/json
      description: Activate or deactivate a subscription in the system. Use 'true'
        to activate and 'false' to deactivate.
      parameters:
      - description: Subscription ID
        format: int64
        in: path
        minimum: 1
        name: subscriptionId
        required: true
        type: integer
      - description: Activate the subscription (use 'true' for activation, 'false'
          for deactivation)
        in: query
        name: activate
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Activate or deactivate a subscription
      tags:
      - Subscription Management
    put:
      consumes:
      - application/json
      description: Update an existing subscription in the system
      parameters:
      - description: Subscription ID
        format: int64
        in: path
        minimum: 1
        name: subscriptionId
        required: true
        type: integer
      - description: Subscription object in JSON format
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.Subscription'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing subscription
      tags:
      - Subscription Management
  /admin/users:
    get:
      consumes:
      - application/json
      description: Retrieve all users
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 3)'
        in: query
        name: count
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved users
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: int conversion failed
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all users to admin
      tags:
      - User Management
  /admin/users/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves information about a single user based on the provided
        ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user information
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request or invalid ID format
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get a single user by ID
      tags:
      - User Management
    patch:
      consumes:
      - application/json
      description: Block or unblock a user based on the provided ID and block status
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Block status: true to block, false to unblock'
        in: query
        name: block
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Successfully blocked/unblocked user
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Boolean conversion failed
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Block or unblock a user
      tags:
      - User Management
  /block/{id}:
    post:
      consumes:
      - application/json
      description: Blocks a user based on the provided ID
      parameters:
      - description: User ID to block
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully blocked user
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: String conversion failed
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Block a user
      tags:
      - Activity
  /chat:
    get:
      consumes:
      - application/json
      description: Get all chats associated with the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: successfully showing chats of the user
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: unauthorised
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get user's chats
      tags:
      - Chat
  /chat/{chatId}/message:
    get:
      consumes:
      - application/json
      description: Get all messages in a chat based on the provided chatId.
      parameters:
      - description: chatID
        format: objectId
        in: path
        name: chatId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: successfully showing messages in the given chatId
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: string converrsion failed
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get messages in a chat
      tags:
      - Chat
    patch:
      consumes:
      - application/json
      description: Marks specified messages as read by the user.
      operationId: makeMessageRead
      parameters:
      - description: chatID
        format: objectId
        in: path
        name: chatId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully marked messages as read
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Mark messages as read
      tags:
      - Chat
  /home:
    get:
      consumes:
      - application/json
      description: Fetches the user's  home page to show the other user's profile
        to make match
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 3)'
        in: query
        name: count
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully fetched home page data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 'Unauthorized: Invalid or missing authentication token'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Display the home page for a user
      tags:
      - Home
  /like:
    get:
      consumes:
      - application/json
      description: Retrieves liked users for the authenticated user
      parameters:
      - description: Page number (default is 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default is 3)
        in: query
        name: count
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved liked items
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get liked users for a user
      tags:
      - Likes
  /like/{id}:
    post:
      consumes:
      - application/json
      description: Likes an user based on the provided ID
      parameters:
      - description: Item ID to like
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully liked
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: String conversion failed
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Like an user
      tags:
      - Likes
  /match:
    get:
      consumes:
      - application/json
      description: Retrieves matched items for the authenticated user
      parameters:
      - description: Page number (default is 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default is 3)
        in: query
        name: count
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved matched items
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get matched items for a user
      tags:
      - Match
  /preference:
    get:
      consumes:
      - application/json
      description: Retrieve user preferences such as distance and other criteria
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved preference
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get user preferences
      tags:
      - User Preferences
    put:
      consumes:
      - application/json
      description: Update user preferences such as distance and other criteria
      parameters:
      - description: User preference details
        in: body
        name: preference
        required: true
        schema:
          $ref: '#/definitions/models.Preference'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated preference
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Data is not in the required format
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update user preferences
      tags:
      - User Preferences
  /profile:
    get:
      consumes:
      - application/json
      description: Retrieve user profile details based on the user ID
      produces:
      - application/json
      responses:
        "200":
          description: Successfully showing profile
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get user profile details
      tags:
      - User Profile
    post:
      consumes:
      - multipart/form-data
      description: Add user profile details including name, date of birth, gender,
        location, bio, interests, and image
      parameters:
      - description: Name
        in: formData
        name: name
        required: true
        type: string
      - description: Date of Birth (YYYY-MM-DD)
        in: formData
        name: dob
        required: true
        type: string
      - description: Gender ID
        in: formData
        name: genderId
        required: true
        type: integer
      - description: City
        in: formData
        name: city
        required: true
        type: string
      - description: Country
        in: formData
        name: country
        required: true
        type: string
      - description: Longitude
        in: formData
        name: longitude
        required: true
        type: number
      - description: Latitude
        in: formData
        name: lattitude
        required: true
        type: number
      - description: Bio
        in: formData
        name: bio
        required: true
        type: string
      - description: Interests (comma-separated IDs)
        in: formData
        name: interests
        required: true
        type: string
      - description: Image
        in: formData
        name: images[]
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added user details
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Data is not in the required format
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Add user profile details
      tags:
      - User Profile
    put:
      consumes:
      - application/json
      description: Update user profile information including phone number, city, country,
        bio, interests, and images
      parameters:
      - description: Phone_number
        in: formData
        name: phone_number
        type: string
      - description: City
        in: formData
        name: city
        type: string
      - description: Country
        in: formData
        name: country
        type: string
      - description: Biography
        in: formData
        name: bio
        type: string
      - description: Comma-separated list of interests
        in: formData
        name: interests
        type: string
      - description: Images to upload
        in: formData
        name: images
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user profile
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request or invalid data format
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update user profile
      tags:
      - User Profile
  /report/{id}:
    post:
      consumes:
      - application/json
      description: Reports a user based on the provided ID
      parameters:
      - description: User ID to report
        in: path
        name: id
        required: true
        type: integer
      - description: Report details
        in: body
        name: report
        required: true
        schema:
          $ref: '#/definitions/models.Report'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully reported
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: String conversion failed" or "Data provided is not in the correct
            format
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Report a user
      tags:
      - Activity
  /sendOtp:
    post:
      consumes:
      - application/json
      description: sending otp to the given phone number
      parameters:
      - description: sendOtp
        in: body
        name: sendOtp
        required: true
        schema:
          $ref: '#/definitions/models.OtpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Login
      tags:
      - User Authentication
  /subscription:
    get:
      consumes:
      - application/json
      description: Get a list of subscriptions for users in the system
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get subscriptions for users
      tags:
      - Subscription
  /subscription/{subscriptionId}:
    get:
      consumes:
      - application/json
      description: Get details of a subscription for users by its ID
      parameters:
      - description: Subscription ID
        format: int64
        in: path
        minimum: 1
        name: subscriptionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get a subscription for users by ID
      tags:
      - Subscription
  /subscription/order/{subscriptionId}:
    post:
      consumes:
      - application/json
      description: Add an order for a subscription in the system
      parameters:
      - description: Subscription ID
        format: int64
        in: path
        minimum: 1
        name: subscriptionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Add an order for a subscription
      tags:
      - Subscription
  /subscription/payment-success:
    get:
      consumes:
      - application/json
      description: Verify a payment for a subscription using the provided order ID,
        payment ID, and signature
      parameters:
      - description: Order ID
        in: query
        name: order_id
        required: true
        type: integer
      - description: Payment ID
        in: query
        name: payment_id
        required: true
        type: string
      - description: Signature
        in: query
        name: signature
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully verified payment
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid input or conversion failure
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify a payment for a subscription
      tags:
      - Subscription
  /subscription/payment/{orderId}:
    get:
      consumes:
      - application/json
      description: Make a payment for a subscription using the provided order ID
      parameters:
      - description: Order ID
        in: path
        name: orderId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Payment successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid input or conversion failure
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Make a payment for a subscription
      tags:
      - Subscription
  /unmatch/{id}:
    delete:
      consumes:
      - application/json
      description: Unmatches with a user based on the provided ID
      parameters:
      - description: User ID to unmatch
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully unmatched
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: String conversion failed
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Unmatch with a user
      tags:
      - Match
  /verify:
    post:
      consumes:
      - application/json
      description: Verify OTP for user authentication and generate access and refresh
        tokens
      parameters:
      - description: OTP verification details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.OtpVerify'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully verified existing user
          schema:
            $ref: '#/definitions/response.Response'
        "201":
          description: Successfully created user
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Data is not in required format
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Error in verifying OTP
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify OTP
      tags:
      - User Authentication
  /ws/{chatId}:
    get:
      consumes:
      - application/json
      description: Handles WebSocket connection for chat and processes incoming messages
      operationId: chat-websocket
      parameters:
      - description: Chat ID
        in: path
        name: chatId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      summary: Handle WebSocket connection for chat
      tags:
      - Chat
swagger: "2.0"
